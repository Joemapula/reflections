When would you want to use a remote repository rather than keeping all your work
local?

    You'd want to use a remote repository rather than a local one when 
    you want to share work with others or collaborate simultaneously 

Why might you want to always pull changes manually rather than having Git
automatically stay up-to-date with your remote repository?

    Pulling changes from GitHub manually allows you to have a choice. 
    If GitHub's repository has changes you don't want or need, then 
    automatic pushes may overwrite your own before you can finish them.

Describe the differences between forks, clones, and branches.  When would you
use one instead of another?

    A Fork is a clone on GitHub rather than a local computer
    A clone is a copy on a local computer 
    A branch is a segment of a commit tree that copies it's parent 
    but who's future commit history is separate from other branches 
    A Fork and a branch help keep track of different versions 
    A branch is a more zoomed in version of a Fork
    A branch happens on a single repository 
    A Fork is a clone GitHub makes for you on their own machines 

What is the benefit of having a copy of the last known state of the remote
stored locally?

    Having a copy of the last known state of the remote stored locally 
    allows you to merge any changes locally before pushing to GitHub 
    It also allows you to potentially work on a plane or anywhere without 
    internet access, knowing the last state of the remote 

How would you collaborate without using Git or GitHub?  What would be easier,
and what would be harder?

    It would be more difficult to collaborate without using Git or GitHub.
    You would probably have to use Slack or Google Docs to keep track of 
    changes made to files with others. One person would likely have to 
    work on a single file at a time. 

When would you want to make changes in a separate branch rather than directly in
master?  What benefits does each approach have?

    Fill in your answer here
